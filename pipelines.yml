resources:
  - name: dbp_repo
    type: GitRepo
    configuration:
      gitProvider: GitHub                       # <-- replace with your integration
      path: alony2811/sample-web-app   # <-- replace with your repository name
      branches:
        include: main

  - name: dbp_image
    type: Image
    configuration:
      registry: alonyartifactory                               # <-- replace with your artifactory integration
      sourceRepository: webapp-prod-repo               # <-- required if registry is Artifactory
      imageName: alony.jfrog.io/artifactory/webapp-prod-repo/webappimage  # < -- replace with your image path and name
      imageTag: latest
      autoPull: true
      
  - name: dbp_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: alonyartifactory
      buildName: dbp_build
      buildNumber: 1    

      
pipelines:
  - name: pipeline_dbp
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: alony.jfrog.io/artifactory/webapp-prod-repo/webappimage  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo
          integrations:
            - name: alonyartifactory                            # <-- replace with your artifactory integration

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: dbp_group
          targetRepository: docker-local
          integrations:
            - name: alonyartifactory                           # <-- replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: dbp_image

      - name: publish_dbp_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push
          outputResources:
            - name: dbp_build_info
      
      - name: scan
        type: XrayScan
        configuration:
          #inherits from bash
          failOnScan:        true                      # default true
          inputResources:
            - name:         dbp_build_info           # required
              trigger: false
          outputResources:
            - name:         dbp_build_info            # optional
 
        execution:
          onStart:
            - echo "Preparing for work..."
            - echo "Prepping build environment"
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
      
      



